#version 330 core

// Interpolated values from the vertex shaders
in vec3 out_color;
in vec3 passambColorAttribute;
in vec3 passspcColorAttribute;
in vec3 LightDirection_cameraspace;
in vec3 Normal_cameraspace;
in vec3 EyeDirection_cameraspace;
in float distance;
in float alpha;

// Ouput data
out vec4 color;

uniform mat4 MVP;
uniform mat4 V;

// Values that stay constant for the whole mesh.
uniform sampler2D myTextureSampler;
uniform mat4 MV;
uniform vec3 LightPosition_worldspace;

void main(){
	vec3 n = normalize(Normal_cameraspace);
	vec3 l = normalize(LightDirection_cameraspace);
	vec3 e = normalize(EyeDirection_cameraspace);
	float diff = clamp(dot(n, l), 0.0, 1.0);
	float reflect = clamp(dot(e, reflect(-l, n)), 0.0, 1.0);
	vec3 tmp = 0.1 * passambColorAttribute + passambColorAttribute * diff * 5.0 / (distance * distance) + passspcColorAttribute*pow(reflect, 5)*5.0 / (distance * distance);
	color = vec4(tmp, 1.0);
	color.a = alpha;
}